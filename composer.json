{
  "name": "pluginever/wc-min-max-quantities",
  "description": "The plugin allows you to Set minimum and maximum allowable product quantities and price per product and order.",
  "type": "wordpress-plugin",
  "license": "GPL-2.0-or-later",
  "prefer-stable": true,
  "authors": [
    {
      "name": "pluginever",
      "email": "support@pluginever.com",
      "homepage": "https://pluginever.com",
      "role": "developer"
    }
  ],
  "repositories": [
    {
      "url": "https://github.com/byteever/php-coding-standards.git",
      "type": "git"
    }
  ],
  "minimum-stability": "dev",
  "require": {
    "php": ">=7.0"
  },
  "require-dev": {
    "phpunit/phpunit": "~7.5",
    "byteever/php-coding-standards": "dev-master"
  },
  "autoload": {
    "classmap": [
      "includes/"
    ],
    "files": [
      "includes/functions.php"
    ]
  },
  "config": {
    "optimize-autoloader": true,
    "sort-packages": true,
    "classmap-authoritative": true,
    "preferred-install": "dist",
    "allow-plugins": {
      "dealerdirect/phpcodesniffer-composer-installer": true
    }
  },
  "scripts": {
    "install-scripts": [
      "composer dump-autoload -o"
    ],
    "post-install-cmd": [
      "@install-scripts"
    ],
    "post-update-cmd": [
      "@install-scripts"
    ],
    "pre-commit": "@phpcs",
    "phpcs": "phpcs -s -p .",
    "phpcbf": "phpcbf -p ."
  },
  "extra": {
    "installer-disable": true,
    "scripts-description": {
      "test": "Run unit tests",
      "phpcs": "Analyze code against the WordPress coding standards with PHP_CodeSniffer",
      "phpcbf": "Fix coding standards warnings/errors automatically with PHP Code Beautifier",
      "makepot-audit": "Generate i18n/languages/wc_min_max_quantities.pot file and run audit",
      "makepot": "Generate i18n/languages/wc_min_max_quantities.pot file"
    }
  }
}
